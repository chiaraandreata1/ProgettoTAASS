spring:
  application:
    name: zuul-server

  datasource:
    #NO DOCKER : jdbc:postgresql://localhost:5432/session
    #CON DOCKER: jdbc:postgresql://dbsession:5432/session
#    url: jdbc:postgresql://localhost:5432/session
    url: jdbc:postgresql://localhost:5432/session
    driver-class-name: org.postgresql.Driver
    username: taass
    password: asd

  # The SQL dialect makes Hibernate generate better SQL for the chosen database
  #spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

  # Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
  jpa:
    properties:
      hibernate:
        temp.use_jdbc_metadata_defaults: false

    # Because detection is disabled you have to set correct dialect by hand.
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect

    # Hibernate ddl auto (create, create-drop, validate, update)
    hibernate:
      ddl-auto: update
    show-sql: true

#management:
#  security:
#    sessions: always

server:
  port: 8080


#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}

#management:
#  endpoints:
#    web:
#      exposure:
#        include: '*'

#ribbon:
#  eureka:
#    enabled: true
---
#spring:
#  profiles: docker

#eureka:
#  client:
#    service-url:
#      defaultZone: http://service-discovery:8761/eureka

zuul:
  ignoredServices: '*'
  ignored-patterns:
    - /sockjs-node/**
    - /a/test
    - /error
  routes:
    tournament-service: /api/v1/tournaments/**
    reservation-service: /api/v1/reservations/**
    lesson-service: /api/v1/courses/**
    facility-service: /api/v1/facility/**

#    oauth2-start:
#      path: /**/oauth2/**
#      service-id: authentication-service
#      strip-prefix: false
    authentication-service: /api/v1/user/**
#    oauth2-login:
#      path: /login/oauth2/**
#      service-id: authentication-service
#      strip-prefix: false
#    auth-service:
#      path: /oauth2/**
#      strip-prefix: false
    frontend:
      path: /**
      url: http://localhost:4200/
  sensitive-headers:
  host:
    time-to-live: -1
    connect-timeout-millis: 5000
    max-per-route-connections: 10000
    max-total-connections: 5000
    socket-timeout-millis: 60000
    semaphore:
      max-semaphores: 500
  ribbon:
    eager-load:
      enabled: true

logging:
  level:
    org:
      springframework:
        cloud:
          netflix: debug
        security: debug

ribbon:
  ReadTimeout: 60000
  connection-timeout: 3000
  eureka:
    enabled: true

#taass:
#  auth:
#    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
#    tokenExpirationMsec: 864000000
#  routes:
#    tournaments-service: /myusers/**

rabbit:
  users:
    exchange-name: rpc.users
    auth:
      queue-name: rpc.users.auth
      key: users.auth

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000
---
spring:
  profiles: "prod"

  rabbitmq:
    host: rabbitmq
    port: 5672
    username: default_user_ZDs90OlN6xwqFDLviH7
    password: oFRsk_sA9KKcUFgL6tDwJ8HOU2qdu7GC

  datasource:
    #NO DOCKER : jdbc:postgresql://localhost:5432/session
    #CON DOCKER: jdbc:postgresql://dbsession:5432/session
    #    url: jdbc:postgresql://localhost:5432/session
    url: jdbc:postgresql://dbsession:5432/session

eureka:
  instance:
    # Leave prefer ip address to allow the gateway inside the kubernetes cluster to find this service by it's pod ip
    preferIpAddress: true
    # The hostname of the service, to register the pod and turn it easier for the gateway to find it
    hostname: gateway
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-0.eureka.default.svc.cluster.local:8761/eureka,http://eureka-1.eureka.default.svc.cluster.local:8761/eureka,http://eureka-2.eureka.default.svc.cluster.local:8761/eureka

zuul:
  routes:
    frontend:
      path: /**
      url: http://frontend-lb:4200/
