spring:
  application:
    name: authentication-service

  datasource:
    url: jdbc:postgresql://localhost:5432/users
    driver-class-name: org.postgresql.Driver
    username: taass
    password: asd

  # The SQL dialect makes Hibernate generate better SQL for the chosen database
  #spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

  # Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
  jpa:
    properties:
      hibernate:
        temp.use_jdbc_metadata_defaults: false

    # Because detection is disabled you have to set correct dialect by hand.
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect

    # Hibernate ddl auto (create, create-drop, validate, update)
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 396344374894-7htvgeum5fk4ibrfhbh0r0v5t9lt5539.apps.googleusercontent.com
            clientSecret: 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
            redirect-uri: "http://ball.net:8080/api/v1/user/login/oauth2/code/google"
#          google-m:
#            clientID: 396344374894-7htvgeum5fk4ibrfhbh0r0v5t9lt5539.apps.googleusercontent.com
#            authorization-grant-type: authorization_code
#            clientSecret: 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
#            redirect-uri: "http://10.0.2.2.nip.io:8080/api/v1/user/login/oauth2/code/google"
#            scope:
#              - openid
#              - profile
#              - email
#              - address
          github:
            client-id: 07a39614d79f8079e89c
            client-secret: d2e8d149246c8e3f90bbafbd325c5140c9e47b4d
            redirect-uri: http://localhost:8080/api/v1/user/login/oauth2/code/github
        provider:
          google-m:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
  session:
    jdbc:
      initialize-schema: always
    store-type: jdbc

session:
  datasource:
    url: jdbc:postgresql://localhost:5432/session
    driver-class-name: org.postgresql.Driver
    username: taass
    password: asd

    jpa:
      properties:
        hibernate:
          temp.use_jdbc_metadata_defaults: false

      # Because detection is disabled you have to set correct dialect by hand.
      database-platform: org.hibernate.dialect.PostgreSQL9Dialect

      # Hibernate ddl auto (create, create-drop, validate, update)
      hibernate:
        ddl-auto: update

taass:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 1800000 # 30 minutes
#    tokenExpirationMsec: 864000000
  oauth2:
    authorizedRedirectUris: http://localhost:8080/oauth2/redirect,http://ball.net:8080/login,ballnet://oauth2/redirect,myiosapp://oauth2/redirect,



server:
  port: 8081

logging:
  level:
    org:
      springframework:
        security: debug

rabbit:
  users:
    exchange-name: rpc.users
    get-info:
      queue-name: rpc.users.info
      key: users.info
    auth:
      queue-name: rpc.users.auth
      key: users.auth
    verify:
      queue-name: rpc.users.verify
      key: users.verify
